《面向对象程序设计》复习提纲
 1. 面向对象的基本概念：
	 a) 什么是类class、对象object、面向对象编程oop？
	 b) 面向对象的三大特征：（抽象）封装、继承和多态
 2. c++新增的语法特性（面向过程）
	 a) c++简介：发展历史，发明者，是c语言的超集，支持的编程模式（面向过程，面向对象，泛型编程）
	 b) const常量：定义和使用，与指针一起使用的情况
	 c) 引用：定义和使用
	 d) inline函数：使用场合
	 e) 函数重载：掌握函数签名（函数原型）
	 f) 四大强制类型转换（static_cast,dynamic_cast, const_cast和reinterpret_cast）
	 g) 隐式和显式类型转换
	 h) 默认参数
	 i) new与delete使用： 特别是在堆上动态创建对象数组
	 j) 友元：友元函数与友元类
 3. 类与对象
	 a) 类与对象的关系
	 b) 如何定义类和创建对象？
	 c) 创建对象的具体过程。
	 d）重点掌握构造函数与析构函数：作用，特点，使用等等
	 e) 构造函数与析构函数的调用顺序问题
	 f) 成员初始化列表：const成员、引用成员、成员对象、基类子对象
	 g) c++11提供的初始化：统一风格初始化、类内初始化、列表初始化
	 h) 静态成员：特别是静态数据成员的定义
	 i) const成员
	 j) 指向成员的指针
 4. 继承与派生
	 a) 如何定义派生类？
	 b) 三大成员访问控制属性： public, private, protected
	 c) 三大继承方式：实际运用中基本使用public继承
	 d) 不同继承方式下，成员访问控制属性是如何发生变化的？
	 e) hiding隐藏：派生中定义一个成员函数，会隐藏基类所有的同名函数。dobj.Base::fun();
	 f) 了解多重基础与虚继承的定义与作用
	 g) 类型兼容原则：只支持公有继承
 5）多态与虚函数
	 a) 什么是多态？一个接口，多种实现
	 b) 多态调用发生的前提条件：在类型兼容原则下，通过基类引用或指针调用虚函数。
	 c) 虚函数的定义与使用：什么是override覆盖，特别是在成员函数中调用虚函数
	 d) 虚析构函数
	 e) 纯虚函数与抽象类
	 f) 了解一下虚函数的工作原理
 6. 模板
	 a) 函数模板的定义使用
	 b) 类模板的定义使用
	 c) 模板的实例化、特化
 7.  异常处理
	 a) try catch throw 代码的框架结构
	 b) 理解异常处理的代码执行过程
 8. 输入输出流
	 a) 了解流中类的继承体系结构
	 b) 典型的流：istream，ostream, ifstream,ofstream等等
	 c) 流对象： cin， cout
	 d) 流的格式化输出
 9. 运算符重载
	 a) 理解两种重载方式：使用全局函数和成员函数进行运算符重载
	 b) 特点：不能改变优先级和结合性等等
	 c) 特殊运算符重载：= [] ++ -- () -> << >>
 10. c++11特性
	 a) auto, 新的循环遍历，
	 b) 右值与移动语义

